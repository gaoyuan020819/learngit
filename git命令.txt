1.初始化一个仓库	
	git init 在当前位置建立版本库

2.添加文件到git仓库
	1). git add 可反复多次使用，添加多个文件   ####（把文件修改添加到暂存区）
			git add <文件名> 将文件添加到仓库
		
	2). git commit ####（把暂存区的所有内容提交到当前分支）
			git commit -m "XXX" 将文件提交到仓库
			
	每次的修改如果没有 git add到暂存区，就不会加入到commit中
	
	
3.查看仓库当前状态
	git status
	
	
4.查看difference
	git diff
	git diff HEAD -- readme.txt 查看工作区和版本库里面最新版本的区别
	
	
5.查看历史记录
	git log
	git log --pretty+oneline 将历史信息合并成一行

6.版本回退
	git reset --hard HEAD^
	git reset --hard <commitId>(版本号)
	HEAD表示当前版本 HEAD^表示上一个版本  版本如果太多数不过来可以用数字代替，例如HEAD~100
	
	####git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区
	
	
7.查看命令记录
	git reflog
	
	
8.工作区
	电脑中能够看到的目录
	
	
9.版本库
	工作区的隐藏目录(.git )，这个不算工作区，而是git的版本库
	版本库
		-stage(index)暂存区
		-git自动创建的第一个master
		-指向master的HEAD指针
		
10.丢弃工作区的修改
	git checkout -- <文件名>  让这个文件回到最近一次git commit或git add时的状态
	
	##一种是文件自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
	##一种是文件已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

	如果没有“ -- ”就变成了切换成另一分支的命令
		
	

11.撤销暂存区的修改
	git reset HEAD file 可以把暂存区的修改撤销掉（unstage），重新放回工作区
	
	
12.删除文件
	rm <文件名>
	git rm <文件名>  确定删除
	
	git checkout -- <文件名> 删错的情况下用于还原
	git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
	
	
13.添加远程仓库
	git remote add origin https://github.com/gaoyuan020819/new.git 与远程库相关联 远程库默认姓名为origin，可以修改
	git push -u origin master 将本地所有内容推送到远程库上 （实际上是将当前分支master推送到远程）
		
		由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，
	还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
	
	git push origin master以后提交的命令
	
	
14.分支管理
	在版本回退中，git将版本串成一条时间线，这条时间线就是一个分支。
	
	master称为主分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。
	
	master分支是一条线，Git用master指向最新的提交，再用HEAD指向master，就能确定当前分支，以及当前分支的提交点
	每次提交，master分支都会向前移动一步，这样，随着你不断提交，master分支的线也越来越长
	
	当我们创建新的分支，例如dev时，Git新建了一个指针叫dev，指向master相同的提交，再把HEAD指向dev，就表示当前分支在dev上
	从现在开始，对工作区的修改和提交就是针对dev分支了，比如新提交一次后，dev指针往前移动一步，而master指针不变
	
	分支合并
		直接把master指向dev的当前提交
		
		
	14.1创建分支（Dev为创建的分支名）
		git checkout -b dev     ###git checkout命令加上-b参数表示创建并切换
		
		git branch Dev 创建分支
		git checkout Dev 切换到Dev分支
		
	14.2查看当前分支
		git branch 会列出所有分支，当前分支前会有一个*符号
		
	14.3合并当前分支
		git merge Dev  ###git merge命令用于合并指定分支到当前分支
		
	14.4删除分支
		git branch -d dev
		
		
		
15.解决冲突
	
	
	
	

	